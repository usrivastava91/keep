{"version":3,"sources":["ui-components/Modal.tsx","store/actions.ts","utils/uuid.ts","components/CreateBox.tsx","components/NoteCard.tsx","components/NotesGrid.tsx","components/PinnedNotes.tsx","routes/appRoutes.ts","components/ActiveNotes.tsx","components/ArchivedNotes.tsx","components/SearchResults.tsx","components/Note.tsx","components/Header.tsx","components/SideBar.tsx","components/AppLayout.tsx","App.tsx","serviceWorker.ts","store/appReducer.ts","utils/DBConfig.ts","store/appSagas.ts","store/index.ts","index.tsx"],"names":["Modal","showModal","show","triggerName","children","conditionalShowHideClass","overlayClass","onClick","className","activeNotesRecieved","notes","type","payload","archivedNotesRecieved","pinnedNotesRecieved","searchDataCollated","allNotes","query","create_UUID","dt","Date","getTime","replace","c","r","Math","random","floor","toString","CreateBox","dispatch","useDispatch","useState","setShow","hideModal","CSSTransition","in","timeout","classNames","onSubmit","values","id","uuid","Object","keys","length","note","render","handleSubmit","reset","event","promise","then","name","component","placeholder","rows","NoteCard","props","body","title","history","useHistory","summary","undefined","substring","validatedTitle","console","log","push","encodeURI","e","stopPropagation","archivedNote","pinnedNote","deletedNote","NotesGrid","map","appear","key","PinnedNotes","useEffect","pinnnedNotes","useSelector","state","pinnedNotes","searchResults","search","showSearchResults","pinnedNotesSearchResults","filter","result","appRoutes","path","activeNotes","activeNotesSearchResults","archivedNotes","archivedNotesSearchResults","useParams","updatedNote","initialValue","Header","useLocation","pathname","substr","sideBarVisibility","util","showSideBar","onChange","target","value","onBlur","SideBar","AppLayout","exact","from","to","route","index","App","Boolean","window","location","hostname","match","activeNoteState","archivedNotesState","pinnedNotesState","searchState","appReducers","action","newState","toLowerCase","includes","rootReducer","combineReducers","db","Dexie","version","stores","watchCreateNote","createNote","watchUpdateNote","updateNote","watchDeleteNote","deleteNote","watchGetActiveNotes","getActiveNotes","watchArchiveNote","archiveNote","watchGetArchivedNotes","getArchivedNotes","watchPinNote","pinNote","watchGetPinnedNotes","getPinnedNotes","watchSearch","rootSaga","takeLatest","Promise","resolve","reject","table","add","update","delete","put","takeEvery","toArray","actions","allNotesFromState","select","appSagas","all","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","process","REACT_APP_BUILD_ENV","store","createStore","applyMiddleware","run","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b492a44c.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport \"./Modal.scss\";\ninterface Props {\n  triggerName: string;\n  showModal: any;\n  show: boolean;\n}\nexport const Modal: React.FC<Props> = ({\n  showModal,\n  show,\n  triggerName,\n  children,\n}) => {\n  const conditionalShowHideClass = show ? \"display-block\" : \"display-none\";\n  const overlayClass = show ? \"overlay\" : \"\";\n  return (\n    <div>\n      <button onClick={showModal}>{triggerName}</button>\n      <div className={conditionalShowHideClass + \" \" + overlayClass}>\n        <section className=\"modal-main\">{children}</section>\n      </div>\n    </div>\n  );\n};\n","import { NewNote } from \"../types\";\nimport { Action } from \"redux\";\nexport const CREATE_NOTE = \"CREATE_NOTE\";\nexport const GET_ACTIVE_NOTES = \"GET_ACTIVE_NOTES\";\nexport const ACTIVE_NOTES_RECIEVED = \"ACTIVE_NOTES_RECIEVED\";\nexport const ARCHIVE_NOTE = \"ARCHIVE_NOTE\";\nexport const GET_ARCHIVED_NOTES = \"GET_ARCHIVED_NOTES\";\nexport const ARCHIVED_NOTES_RECIEVED = \"ARCHIVED_NOTES_RECIEVED\";\nexport const PIN_NOTE = \"PIN_NOTE\";\nexport const GET_PINNED_NOTES = \"GET_PINNED_NOTES\";\nexport const PINNED_NOTES_RECIEVED = \"PINNED_NOTES_RECIEVED\";\nexport const UPDATE_NOTE = \"UDPATE_NOTE\";\nexport const DELETE_NOTE = \"DELETE_NOTE\";\nexport const SEARCH = \"SEARCH\";\nexport const SEARCH_DATA_COLLATED = \"SEARCH_DATA_COLLATED\";\nexport const SHOW_SEARCH_RESULTS = \"SHOW_SEARCH_RESULTS\";\n\nexport const SHOW_SIDE_BAR = \"SHOW_SIDE_BAR\";\ninterface CreateNote {\n  type: typeof CREATE_NOTE;\n  payload: {\n    newNote: {};\n  };\n}\n\ninterface UpdateNote {\n  type: typeof UPDATE_NOTE;\n  payload: {\n    updatedNote: NewNote;\n  };\n}\n\ninterface DeleteNote {\n  type: typeof DELETE_NOTE;\n  payload: {\n    deletedNote: NewNote;\n  };\n}\n\ninterface GetActiveNotes {\n  type: typeof GET_ACTIVE_NOTES;\n  payload: {};\n}\n\ninterface ActiveNotesRecieved {\n  type: typeof ACTIVE_NOTES_RECIEVED;\n  payload: {\n    notes: NewNote[];\n  };\n}\n\ninterface ArchiveNote {\n  type: typeof ARCHIVE_NOTE;\n  payload: {\n    note: NewNote;\n  };\n}\n\ninterface GetArchivedNotes {\n  type: typeof GET_ARCHIVED_NOTES;\n  payload: {};\n}\n\ninterface ArchivedNotesRecieved {\n  type: typeof ARCHIVED_NOTES_RECIEVED;\n  payload: {\n    notes: NewNote[];\n  };\n}\n\ninterface PinNote {\n  type: typeof PIN_NOTE;\n  payload: {\n    newNote: {};\n  };\n}\n\ninterface GetPinnedNotes {\n  type: typeof GET_PINNED_NOTES;\n  payload: {};\n}\n\ninterface PinnedNotesRecieved {\n  type: typeof PINNED_NOTES_RECIEVED;\n  payload: {\n    notes: NewNote[];\n  };\n}\n\ninterface Search {\n  type: typeof SEARCH;\n  payload: {\n    query: string;\n  };\n}\n\ninterface SearchDataCollated {\n  type: typeof SEARCH_DATA_COLLATED;\n  payload: {\n    allNotes: NewNote[];\n    query: string;\n  };\n}\n\ninterface ShowSearchResults {\n  type: typeof SHOW_SEARCH_RESULTS;\n  payload: {\n    showSearchResults: boolean;\n  };\n}\n\ninterface ShowSideBar {\n  type: typeof SHOW_SIDE_BAR;\n  payload: {\n    showSideBar: boolean;\n  };\n}\nexport type Actions =\n  | CreateNote\n  | UpdateNote\n  | GetActiveNotes\n  | ActiveNotesRecieved\n  | ArchiveNote\n  | GetArchivedNotes\n  | ArchivedNotesRecieved\n  | PinNote\n  | GetPinnedNotes\n  | PinnedNotesRecieved\n  | Search\n  | SearchDataCollated\n  | ShowSearchResults\n  | ShowSideBar\n  | DeleteNote;\n\nexport function createNote(newNote: NewNote): Actions {\n  return {\n    type: CREATE_NOTE,\n    payload: {\n      newNote,\n    },\n  };\n}\n\nexport function updateNote(updatedNote: NewNote): Actions {\n  return {\n    type: UPDATE_NOTE,\n    payload: {\n      updatedNote,\n    },\n  };\n}\n\nexport function deleteNote(deletedNote: NewNote): Actions {\n  return {\n    type: DELETE_NOTE,\n    payload: {\n      deletedNote,\n    },\n  };\n}\nexport function getActiveNotes(): Actions {\n  return {\n    type: GET_ACTIVE_NOTES,\n    payload: {},\n  };\n}\n\nexport function activeNotesRecieved(notes: NewNote[]): Actions {\n  return {\n    type: ACTIVE_NOTES_RECIEVED,\n    payload: {\n      notes,\n    },\n  };\n}\n\nexport function archiveNote(note: NewNote): Actions {\n  return {\n    type: ARCHIVE_NOTE,\n    payload: {\n      note,\n    },\n  };\n}\n\nexport function getArchivedNotes(): Actions {\n  return {\n    type: GET_ARCHIVED_NOTES,\n    payload: {},\n  };\n}\n\nexport function archivedNotesRecieved(notes: NewNote[]): Actions {\n  return {\n    type: ARCHIVED_NOTES_RECIEVED,\n    payload: {\n      notes,\n    },\n  };\n}\n\nexport function pinNote(newNote: NewNote): Actions {\n  return {\n    type: PIN_NOTE,\n    payload: {\n      newNote,\n    },\n  };\n}\n\nexport function getPinnedNotes(): Actions {\n  return {\n    type: GET_PINNED_NOTES,\n    payload: {},\n  };\n}\n\nexport function pinnedNotesRecieved(notes: NewNote[]): Actions {\n  return {\n    type: PINNED_NOTES_RECIEVED,\n    payload: {\n      notes,\n    },\n  };\n}\n\nexport function search(query: string): Actions {\n  return {\n    type: SEARCH,\n    payload: {\n      query,\n    },\n  };\n}\n\nexport function searchDataCollated(\n  allNotes: NewNote[],\n  query: string\n): Actions {\n  return {\n    type: SEARCH_DATA_COLLATED,\n    payload: {\n      allNotes,\n      query,\n    },\n  };\n}\n\nexport function showSearchResults(showSearchResults: boolean): Actions {\n  return {\n    type: SHOW_SEARCH_RESULTS,\n    payload: {\n      showSearchResults,\n    },\n  };\n}\n\nexport function showSideBar(showSideBar: boolean): Actions {\n  return {\n    type: SHOW_SIDE_BAR,\n    payload: {\n      showSideBar,\n    },\n  };\n}\n","const create_UUID = () => {\n  let dt = new Date().getTime();\n  let uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (\n    c\n  ) {\n    let r = (dt + Math.random() * 16) % 16 | 0;\n    dt = Math.floor(dt / 16);\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n  });\n  return uuid;\n};\n\nexport default create_UUID;\n","import React, { useState } from \"react\";\nimport { Modal } from \"../ui-components/Modal\";\nimport { Form, Field } from \"react-final-form\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CREATE_NOTE } from \"../store/actions\";\nimport uuid from \"../utils/uuid\";\nimport \"./CreateBox.scss\";\nimport { CSSTransition } from \"react-transition-group\";\n\ninterface Props {}\nexport const CreateBox: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const createNote = (values: any) => {\n    const id = uuid();\n    if (Object.keys(values).length === 0) {\n      hideModal();\n    } else {\n      const note = { ...values, type: \"activeNotes\", id };\n      dispatch({ type: CREATE_NOTE, payload: { ...note } });\n      hideModal();\n    }\n  };\n\n  const hideModal = () => {\n    setShow(false);\n  };\n\n  const showModal = () => {\n    setShow(true);\n  };\n\n  return (\n    <>\n      <CSSTransition in={show} timeout={100} classNames=\"sidebar\">\n        <Modal triggerName=\"new note\" showModal={showModal} show={show}>\n          <Form\n            onSubmit={createNote}\n            render={({ handleSubmit, reset }: any) => (\n              <form\n                onSubmit={(event) => {\n                  const promise = handleSubmit(event);\n                  promise &&\n                    promise.then(() => {\n                      reset();\n                    });\n\n                  return promise;\n                }}\n              >\n                <div>\n                  <Field\n                    name=\"title\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder=\"Title\"\n                  />\n                </div>\n                <div>\n                  <Field\n                    name=\"body\"\n                    component=\"textarea\"\n                    rows={25}\n                    type=\"text\"\n                    placeholder=\"take a note...\"\n                  />\n                </div>\n                <button className=\"create-note-button\" type=\"submit\">\n                  Close\n                </button>\n              </form>\n            )}\n          />\n        </Modal>\n      </CSSTransition>\n    </>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport \"./NoteCard.scss\";\nimport { NewNote } from \"../types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ARCHIVE_NOTE, PIN_NOTE, DELETE_NOTE } from \"../store/actions\";\nimport { useHistory, useLocation } from \"react-router-dom\";\ninterface Props {\n  note: NewNote;\n}\nexport const NoteCard: React.FC<Props> = (props: Props) => {\n  const { note } = props;\n  const { id, body, title, type } = note;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  // let location = useLocation();\n  // const type = location.pathname.substr(1);\n\n  const archiveNote = (e: any) => {\n    e.stopPropagation();\n    const archivedNote = { ...note, type: \"archivedNotes\" };\n    dispatch({ type: ARCHIVE_NOTE, payload: archivedNote });\n  };\n\n  const pinNote = (e: any) => {\n    e.stopPropagation();\n    const pinnedNote = { ...note, type: \"pinnedNotes\" };\n    dispatch({ type: PIN_NOTE, payload: pinnedNote });\n  };\n\n  const showNote = () => {\n    history.push(\n      `note/${id}/${encodeURI(title)}/${encodeURI(body)}/${encodeURI(type)}`\n    );\n  };\n  const deleteNote = (e: any) => {\n    e.stopPropagation();\n    const deletedNote = { id, type };\n    dispatch({ type: DELETE_NOTE, payload: { deletedNote } });\n  };\n  const summary = body != undefined ? body.substring(0, 50) + \"...\" : \"\";\n  const validatedTitle = title != undefined ? title : \"\";\n  console.log(type);\n  return (\n    <div className=\"note-card\" onClick={showNote}>\n      <h4 className=\"title\">{validatedTitle}</h4>\n      <div className=\"body\">{summary}</div>\n      <div className=\"actions\">\n        <i\n          onClick={archiveNote}\n          className={\n            type === \"archivedNotes\"\n              ? \"display-none\"\n              : \"fa fa-archive cursor-pointer\"\n          }\n        ></i>\n\n        <i\n          onClick={pinNote}\n          className={\n            type === \"pinnedNotes\"\n              ? \"display-none\"\n              : \"fa fa-thumb-tack cursor-pointer\"\n          }\n        ></i>\n\n        <i onClick={deleteNote} className=\"fa fa-trash cursor-pointer\"></i>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { NewNote } from \"../types\";\nimport { NoteCard } from \"./NoteCard\";\nimport \"./NotesGrid.scss\";\nimport { CSSTransition } from \"react-transition-group\";\ninterface Props {\n  notes: NewNote[];\n}\nexport const NotesGrid: React.FC<Props> = (props: Props) => {\n  const { notes } = props;\n  return (\n    <div className=\"notes-grid\">\n      {notes.map((note: NewNote) => {\n        const { id } = note;\n        return (\n          <CSSTransition in={true} timeout={100} classNames=\"note-card\" appear>\n            <NoteCard key={id} note={note}></NoteCard>\n          </CSSTransition>\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { NotesGrid } from \"./NotesGrid\";\nimport { GET_PINNED_NOTES } from \"../store/actions\";\nimport { NewNote } from \"../types\";\nimport \"./PinnedNotes.scss\";\ninterface Props {}\nexport const PinnedNotes: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({ type: GET_PINNED_NOTES, payload: {} });\n  }, []);\n\n  const pinnnedNotes = useSelector((state: any) => {\n    return state.pinnedNotes;\n  });\n  const searchResults = useSelector((state: any) => {\n    return state.search.searchResults;\n  });\n  const showSearchResults = useSelector((state: any) => {\n    return state.search.showSearchResults;\n  });\n  const pinnedNotesSearchResults = searchResults.filter((result: NewNote) => {\n    return result.type === \"pinnedNotes\";\n  });\n  return (\n    <div className={pinnnedNotes.length > 0 ? \"pinned-notes\" : \"display-none\"}>\n      <i className=\"fa fa-thumb-tack\"></i>\n      <NotesGrid\n        notes={\n          showSearchResults === true ? pinnedNotesSearchResults : pinnnedNotes\n        }\n      />\n    </div>\n  );\n};\n","import { IRoute } from \"./Route\";\nimport { ActiveNotes } from \"../components/ActiveNotes\";\nimport { ArchivedNotes } from \"../components/ArchivedNotes\";\nimport { SearchResults } from \"../components/SearchResults\";\nimport { Note } from \"../components/Note\";\nconst ActiveNotesRoute: IRoute = {\n  path: \"/active\",\n  component: ActiveNotes,\n};\n\nconst ArchivedNotesRoute: IRoute = {\n  path: \"/archived\",\n  component: ArchivedNotes,\n};\n\nconst SearchResultsRoute: IRoute = {\n  path: \"/search\",\n  component: SearchResults,\n};\n\nconst NoteRoute: IRoute = {\n  path: \"/note/:id/:title/:body/:type\",\n  component: Note,\n};\nexport const appRoutes: IRoute[] = [\n  ActiveNotesRoute,\n  ArchivedNotesRoute,\n  SearchResultsRoute,\n  NoteRoute,\n];\n","import React, { useEffect } from \"react\";\nimport { CreateBox } from \"./CreateBox\";\nimport \"./ActiveNotes.scss\";\nimport { NotesGrid } from \"./NotesGrid\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { NewNote } from \"../types\";\nimport { PinnedNotes } from \"./PinnedNotes\";\n\ninterface Props {}\nexport const ActiveNotes: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log(\"reloaded\");\n    dispatch({ type: \"GET_ACTIVE_NOTES\", payload: {} });\n    dispatch({ type: \"GET_ARCHIVED_NOTES\", payload: {} }); //Need to get the archived notes to have them available in the state for search( bad design regret :\\ )\n  }, []);\n\n  const activeNotes = useSelector((state: any) => {\n    return state.activeNotes;\n  });\n  const searchResults = useSelector((state: any) => {\n    return state.search.searchResults;\n  });\n  const showSearchResults = useSelector((state: any) => {\n    return state.search.showSearchResults;\n  });\n  const activeNotesSearchResults = searchResults.filter((result: NewNote) => {\n    return result.type === \"activeNotes\";\n  });\n\n  return (\n    <div className=\"active-notes\">\n      <div className=\"create-box\">\n        <CreateBox />\n      </div>\n      <div className=\"grid-section\">\n        <PinnedNotes />\n        <NotesGrid\n          notes={\n            showSearchResults === true ? activeNotesSearchResults : activeNotes\n          }\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { NotesGrid } from \"./NotesGrid\";\nimport { NewNote } from \"../types\";\ninterface Props {}\nexport const ArchivedNotes: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({ type: \"GET_ARCHIVED_NOTES\", payload: {} });\n  }, []);\n\n  const archivedNotes = useSelector((state: any) => {\n    return state.archivedNotes;\n  });\n  const searchResults = useSelector((state: any) => {\n    return state.search.searchResults;\n  });\n  const showSearchResults = useSelector((state: any) => {\n    return state.search.showSearchResults;\n  });\n  const archivedNotesSearchResults = searchResults.filter((result: NewNote) => {\n    return result.type === \"archivedNotes\";\n  });\n  return (\n    <div className=\"archived-notes\">\n      <NotesGrid\n        notes={\n          showSearchResults === true\n            ? archivedNotesSearchResults\n            : archivedNotes\n        }\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\ninterface Props {}\nexport const SearchResults: React.FC<Props> = () => {\n  return <div>SearchResults</div>;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Modal } from \"../ui-components/Modal\";\nimport { Form, Field } from \"react-final-form\";\nimport \"./NotesGrid.scss\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { UPDATE_NOTE } from \"../store/actions\";\ninterface Props {}\nexport const Note: React.FC<Props> = (props: Props) => {\n  const { id, title, body, type } = useParams();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const hideModal = () => {\n    setShow(false);\n  };\n\n  const showModal = () => {\n    setShow(true);\n  };\n  const editNote = (values: any) => {\n    const updatedNote = { ...values, id, type };\n    dispatch({ type: UPDATE_NOTE, payload: { updatedNote } });\n    if (type === \"archivedNotes\") {\n      history.replace(\"/archived\");\n    } else {\n      history.replace(\"/active\");\n    }\n  };\n  return (\n    <div className=\"note\">\n      <Modal triggerName=\"\" showModal={showModal} show={true}>\n        <Form\n          onSubmit={editNote}\n          render={({ handleSubmit }: any) => (\n            <form onSubmit={handleSubmit}>\n              <div>\n                <Field\n                  initialValue={title}\n                  name=\"title\"\n                  component=\"input\"\n                  type=\"text\"\n                  placeholder=\"Title\"\n                />\n              </div>\n              <div>\n                <Field\n                  name=\"body\"\n                  initialValue={body}\n                  component=\"textarea\"\n                  rows={25}\n                  type=\"text\"\n                  placeholder=\"Title\"\n                />\n              </div>\n              <button className=\"edit-note-button\" type=\"submit\">\n                Close\n              </button>\n            </form>\n          )}\n        />\n      </Modal>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./Header.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SEARCH, SHOW_SEARCH_RESULTS, SHOW_SIDE_BAR } from \"../store/actions\";\nimport { useLocation } from \"react-router-dom\";\ninterface Props {}\nexport const Header: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  let location = useLocation();\n  const title = location.pathname.substr(1);\n  const search = (e: any) => {\n    dispatch({ type: SEARCH, payload: e.target.value });\n    dispatch({ type: SHOW_SEARCH_RESULTS, payload: true });\n  };\n  const cancelSearch = (e: any) => {\n    const searchQuery = e.target.value;\n    if (searchQuery.length > 0) {\n      dispatch({ type: SHOW_SEARCH_RESULTS, payload: true });\n    } else {\n      dispatch({ type: SHOW_SEARCH_RESULTS, payload: false });\n    }\n  };\n\n  const sideBarVisibility = useSelector((state: any) => {\n    return state.util.showSideBar;\n  });\n  const toggleSideBar = () => {\n    dispatch({ type: SHOW_SIDE_BAR, payload: !sideBarVisibility });\n  };\n  return (\n    <div className=\"header\">\n      <div className=\"title display-flex\">\n        <i onClick={toggleSideBar} className=\"fa fa-bars toggle-sidebar\"></i>\n        <h3>{title}</h3>\n      </div>\n      <input\n        className=\"search-bar\"\n        placeholder=\"search...\"\n        type=\"text\"\n        onChange={search}\n        onBlur={cancelSearch}\n      />\n      <div></div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./SideBar.scss\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\ninterface Props {}\nexport const SideBar: React.FC<Props> = () => {\n  const history = useHistory();\n  const selectionMade = (e: any) => {\n    const sectionSelected = e.target.getAttribute(\"data-section\");\n    history.push(sectionSelected);\n  };\n  const sideBarVisibility = useSelector((state: any) => {\n    return state.util.showSideBar;\n  });\n  return (\n    // <div className={sideBarVisibility === true ? \"sidebar\" : \"display-none\"}>\n    <CSSTransition\n      in={sideBarVisibility}\n      timeout={100}\n      classNames=\"sidebar\"\n      appear\n    >\n      <div className=\"\">\n        <div className=\"items\" data-section=\"active\" onClick={selectionMade}>\n          Active Notes\n        </div>\n        <div className=\"items\" data-section=\"archived\" onClick={selectionMade}>\n          Archived Notes\n        </div>\n      </div>\n    </CSSTransition>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { appRoutes } from \"../routes/appRoutes\";\nimport { IRoute } from \"../routes/Route\";\nimport { Header } from \"./Header\";\nimport { SideBar } from \"./SideBar\";\nimport \"./AppLayout.scss\";\nimport { useSelector } from \"react-redux\";\n\nimport { CSSTransition } from \"react-transition-group\";\n\ninterface Props {}\nexport const AppLayout: React.FC<Props> = (props: Props) => {\n  const sideBarVisibility = useSelector((state: any) => {\n    return state.util.showSideBar;\n  });\n  return (\n    <div className=\"app-layout\">\n      <div className=\"app-body\">\n        <Header />\n        <div className=\"container\">\n          {sideBarVisibility === true ? <SideBar /> : null}\n          <div className=\"main\">\n            <Switch>\n              <Redirect exact from=\"/\" to=\"/active\" />\n              {appRoutes.map((route: IRoute, index: Number) => (\n                <Route\n                  key={route.path}\n                  exact={true}\n                  path={route.path}\n                  component={route.component}\n                />\n              ))}\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport { AppLayout } from \"./components/AppLayout\";\n\nfunction App() {\n  return (\n    <>\n      <AppLayout />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport * as actions from \"./actions\";\nimport { NewNote, SearchState } from \"../types\";\nconst activeNoteState: NewNote[] = [];\nconst activeNotes = (state = activeNoteState, action: any): NewNote[] => {\n  const { type, payload } = action;\n  switch (type) {\n    // Manually updating the activeNotes state when a note is created, instead of doing it through the saga's\n    // response because indexedDB only returns the id of the object saved, and not the whole,\n    //  hence failing the NOTE_CREATED_SUCCESSFULLY action approach\n    case actions.CREATE_NOTE: {\n      const { body, id, title, type } = payload;\n      const note = { body, id, title, type };\n      const newState = [...state, note];\n      return newState;\n    }\n    case actions.ACTIVE_NOTES_RECIEVED: {\n      const { notes } = payload;\n      const newState = [...notes];\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nconst archivedNotesState: NewNote[] = [];\nconst archivedNotes = (state = archivedNotesState, action: any): NewNote[] => {\n  const { type, payload } = action;\n  switch (type) {\n    case actions.ARCHIVED_NOTES_RECIEVED: {\n      const { notes } = payload;\n      const newState = [...notes];\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nconst pinnedNotesState: NewNote[] = [];\nconst pinnedNotes = (state = pinnedNotesState, action: any): NewNote[] => {\n  const { type, payload } = action;\n  switch (type) {\n    //Manually updating the pinned note state when a note is created for the same reason\n    // I had to update the state manually on note creation\n    case actions.PIN_NOTE: {\n      const { body, id, title, type } = payload;\n      const note = { body, id, title, type };\n      const newState = [...state, note];\n      return newState;\n    }\n\n    case actions.PINNED_NOTES_RECIEVED: {\n      const { notes } = payload;\n      const newState = [...notes];\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nconst searchState: SearchState = {\n  showSearchResults: false,\n  searchResults: [],\n};\nconst search = (state = searchState, action: any): any => {\n  const { type, payload } = action;\n  switch (type) {\n    case actions.SEARCH_DATA_COLLATED: {\n      const { allNotes, query } = payload;\n      const result = allNotes.filter((note: NewNote) => {\n        return (\n          note.body.toLowerCase().includes(query.toLowerCase()) ||\n          note.title.toLowerCase().includes(query.toLowerCase())\n        );\n      });\n      const newState = {\n        searchResults: [...result],\n        showSearchResults: state.showSearchResults,\n      };\n      return newState;\n    }\n\n    case actions.SHOW_SEARCH_RESULTS: {\n      const showSearchResults = payload;\n      return { showSearchResults, searchResults: state.searchResults };\n    }\n    default:\n      return state;\n  }\n};\n\nconst util = (state: any = { showSideBar: true }, action: any) => {\n  const { type, payload } = action;\n  switch (type) {\n    case actions.SHOW_SIDE_BAR: {\n      const showSideBar = payload;\n      return { showSideBar };\n    }\n    default:\n      return state;\n  }\n};\nconst appReducers = { activeNotes, archivedNotes, pinnedNotes, search, util };\n\nexport const rootReducer = combineReducers({\n  ...appReducers,\n});\n","// export const DBConfig = {\n//   name: \"keep\",\n//   version: 1,\n//   objectStoresMeta: [\n//     {\n//       store: \"allNotes\",\n//       storeConfig: { keyPath: \"id\", autoIncrement: true },\n//       storeSchema: [\n//         {\n//           title: \"title\",\n//           body: \"body\",\n//           keypath: \"title\",\n//           options: { unique: false },\n//         },\n//       ],\n//     },\n//     {\n//       store: \"activeNotes\",\n//       storeConfig: { keyPath: \"id\", autoIncrement: true },\n//       storeSchema: [\n//         {\n//           title: \"title\",\n//           body: \"body\",\n//           keypath: \"id\",\n//           options: { unique: false },\n//         },\n//       ],\n//     },\n//     {\n//       store: \"archivedNotes\",\n//       storeConfig: { keyPath: \"id\", autoIncrement: true },\n//       storeSchema: [\n//         {\n//           title: \"title\",\n//           body: \"body\",\n//           keypath: \"id\",\n//           options: { unique: false },\n//         },\n//       ],\n//     },\n//   ],\n// };\n\nimport Dexie from \"dexie\";\n\nconst db = new Dexie(\"keep\");\ndb.version(1).stores({ activeNotes: \"id, title, body\" });\ndb.version(1).stores({ archivedNotes: \"id, title, body\" });\ndb.version(1).stores({ pinnedNotes: \"id, title, body\" });\nexport default db;\n","import {\n  takeEvery,\n  put,\n  takeLatest,\n  call,\n  select,\n  fork,\n} from \"redux-saga/effects\";\nimport { all } from \"redux-saga/effects\";\nimport * as actions from \"./actions\";\nimport db from \"../utils/DBConfig\";\nimport { Action } from \"../types\";\n\nfunction* watchCreateNote() {\n  yield takeLatest(actions.CREATE_NOTE, createNote);\n}\n\nfunction* createNote(action: Action) {\n  const note = action.payload;\n  const promise = new Promise((resolve, reject) => {\n    db.table(\"activeNotes\")\n      .add(note)\n      .then((id) => {\n        resolve(id);\n      });\n  });\n  const id = yield promise;\n}\n\nfunction* watchUpdateNote() {\n  yield takeLatest(actions.UPDATE_NOTE, updateNote);\n}\n\nfunction* updateNote(action: Action) {\n  const { updatedNote } = action.payload;\n  const { id, type, body, title } = updatedNote;\n  const promise = new Promise((resolve, reject) => {\n    db.table(type)\n      .update(id, { body, title, type })\n      .then((id) => {\n        resolve(id);\n      });\n  });\n  const updatedId = yield promise;\n}\n\nfunction* watchDeleteNote() {\n  yield takeLatest(actions.DELETE_NOTE, deleteNote);\n}\n\nfunction* deleteNote(action: Action) {\n  const { deletedNote } = action.payload;\n  const { id, type } = deletedNote;\n\n  const promise = new Promise((resolve, reject) => {\n    db.table(type)\n      .delete(id)\n      .then((id) => {\n        resolve(id);\n      });\n  });\n  const deletedId = yield promise;\n  if (type === \"archivedNotes\") yield put(actions.getArchivedNotes());\n  else if (type === \"activeNotes\") yield put(actions.getActiveNotes());\n  else if (type === \"pinnedNotes\") yield put(actions.getPinnedNotes());\n}\n\nfunction* watchGetActiveNotes() {\n  yield takeEvery(actions.GET_ACTIVE_NOTES, getActiveNotes);\n}\n\nfunction* getActiveNotes(action: Action) {\n  const promise = new Promise((resolve, reject) => {\n    db.table(\"activeNotes\")\n      .toArray()\n      .then((notes) => {\n        resolve(notes);\n      });\n  });\n\n  const notes = yield promise;\n  yield put(actions.activeNotesRecieved(notes));\n}\n\nfunction* watchArchiveNote() {\n  yield takeLatest(actions.ARCHIVE_NOTE, archiveNote);\n}\n//TODO FIGURE OUT WHY WRAPPING UNDER PROMISE ALLOWS YIELD LATER. READ ABOUT YIELD IN SAGA\nfunction* archiveNote(action: Action) {\n  const note = action.payload;\n  const promise = new Promise((resolve, reject) => {\n    db.table(\"archivedNotes\")\n      .add(note)\n      .then((id) => {\n        db.table(\"activeNotes\").delete(note.id);\n        db.table(\"pinnedNotes\").delete(note.id);\n        resolve(id);\n      });\n  });\n  const archivedNoteId = yield promise;\n  //TODO: Figure out a way to remove the archived note from the activeNotes state. so wont have to make db call again\n  //To rerender the active notes section on archiving a note\n\n  yield put(actions.getPinnedNotes());\n  yield put(actions.getActiveNotes());\n}\n\nfunction* watchGetArchivedNotes() {\n  yield takeEvery(actions.GET_ARCHIVED_NOTES, getArchivedNotes);\n}\n\nfunction* getArchivedNotes(action: Action) {\n  const promise = new Promise((resolve, reject) => {\n    db.table(\"archivedNotes\")\n      .toArray()\n      .then((notes) => {\n        resolve(notes);\n      });\n  });\n\n  const notes = yield promise;\n  yield put(actions.archivedNotesRecieved(notes));\n}\n\nfunction* watchPinNote() {\n  yield takeLatest(actions.PIN_NOTE, pinNote);\n}\n\nfunction* pinNote(action: Action) {\n  const note = action.payload;\n  const promise = new Promise((resolve, reject) => {\n    db.table(\"pinnedNotes\")\n      .add(note)\n      .then((id) => {\n        db.table(\"activeNotes\").delete(note.id);\n        db.table(\"archivedNotes\").delete(note.id);\n        resolve(id);\n      });\n  });\n  const pinnedNotes = yield promise;\n  yield put(actions.getArchivedNotes());\n  yield put(actions.getActiveNotes()); //To rerender the active notes section on pinning a note\n}\n\nfunction* watchGetPinnedNotes() {\n  yield takeEvery(actions.GET_PINNED_NOTES, getPinnedNotes);\n}\n\nfunction* getPinnedNotes() {\n  const promise = new Promise((resolve, reject) => {\n    db.table(\"pinnedNotes\")\n      .toArray()\n      .then((notes) => {\n        resolve(notes);\n      });\n  });\n  const notes = yield promise;\n  yield put(actions.pinnedNotesRecieved(notes));\n}\n\nfunction* watchSearch() {\n  yield takeLatest(actions.SEARCH, search);\n}\n\nfunction* search(action: Action) {\n  const query = action.payload;\n  const allNotesFromState = (state: any) => [\n    ...state.activeNotes,\n    ...state.archivedNotes,\n    ...state.pinnedNotes,\n  ];\n  let allNotes = yield select(allNotesFromState);\n  yield put(actions.searchDataCollated(allNotes, query));\n}\n\nconst appSagas = [\n  watchCreateNote(),\n  watchGetActiveNotes(),\n  watchDeleteNote(),\n  watchArchiveNote(),\n  watchGetArchivedNotes(),\n  watchPinNote(),\n  watchGetPinnedNotes(),\n  watchUpdateNote(),\n  watchSearch(),\n];\n\nexport function* rootSaga() {\n  try {\n    yield all([...appSagas]);\n  } catch (e) {}\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { rootReducer } from \"./appReducer\";\nimport { rootSaga } from \"./appSagas\";\n\nexport type AppStore = ReturnType<typeof rootReducer>;\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ is a field that is available on the window object only if\n// the redux devtools is installed. It is not a standard field - therefore, Typescript complains about it.\n// This is the reason we are putting a @ts-ignore\n// @ts-ignore\nlet composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nif (process.env.REACT_APP_BUILD_ENV === \"production\") {\n  // If deploying to production, don't connect to the redux devtools extension.\n  composeEnhancers = compose;\n}\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\n//Redux imports\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\n//Router imports\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}